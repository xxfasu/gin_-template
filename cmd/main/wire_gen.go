// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"gin_template/internal/handler/v1/user_handler"
	"gin_template/internal/middleware"
	"gin_template/internal/repository"
	"gin_template/internal/repository/user_repository"
	"gin_template/internal/service/user_service"
	"gin_template/pkg/logs"
	"gin_template/routes"
	"github.com/gin-gonic/gin"
)

// Injectors from wire.go:

func newWire(logger *logs.Logger) (*gin.Engine, func(), error) {
	db := repository.NewDB(logger)
	transaction := repository.NewTransaction(db)
	userRepository := user_repository.NewUserRepository(db)
	userService := user_service.NewUserService(logger, transaction, userRepository)
	userHandler := user_handler.NewUserHandler(logger, userService)
	recovery := middleware.NewRecoveryM(logger)
	cors := middleware.NewCorsM()
	logM := middleware.NewLogM(logger)
	engine := routes.NewRouter(userHandler, recovery, cors, logM)
	return engine, func() {
	}, nil
}
